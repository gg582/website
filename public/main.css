/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties;
@font-face {
  font-family: 'IBM Plex Sans KR';
  font-style: normal;
  font-weight: 300;
  font-display: swap;
  src: local('IBM Plex Sans KR'), url('/assets/fonts/ibm-plex-sans-kr-v10-korean_latin-300.woff2') format('woff2'), url('/assets/fonts/ibm-plex-sans-kr-v10-korean_latin-300.ttf') format('truetype');
}
@font-face {
  font-family: 'IBM Plex Sans KR';
  font-style: normal;
  font-weight: 500;
  font-display: swap;
  src: local('IBM Plex Sans KR'), url('/assets/fonts/ibm-plex-sans-kr-v10-korean_latin-500.woff2') format('woff2'),  url('/assets/fonts/ibm-plex-sans-kr-v10-korean_latin-500.ttf') format('truetype');
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.relative {
  position: relative;
}
.static {
  position: static;
}
.sticky {
  position: sticky;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.contents {
  display: contents;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline-block {
  display: inline-block;
}
.inline-flex {
  display: inline-flex;
}
.min-h-screen {
  min-height: 100vh;
}
.max-w-none {
  max-width: none;
}
.flex-grow {
  flex-grow: 1;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-\[var\(--border\)\] {
  border-color: var(--border);
}
.bg-\[var\(--surface\)\] {
  background-color: var(--surface);
}
.text-center {
  text-align: center;
}
.text-\[var\(--link\)\] {
  color: var(--link);
}
.italic {
  font-style: italic;
}
.no-underline {
  text-decoration-line: none;
}
.opacity-50 {
  opacity: 50%;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.hover\:underline {
  &:hover {
    @media (hover: hover) {
      text-decoration-line: underline;
    }
  }
}
.hover\:opacity-100 {
  &:hover {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.focus\:ring-offset-2 {
  &:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
}
.focus\:outline-none {
  &:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
}
.dark\:focus\:ring-offset-0 {
  @media (prefers-color-scheme: dark) {
    &:focus {
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
}
html {
  font-weight: 300;
  cursor: url('/assets/images/cursor.svg'), url('/assets/images/cursor.png'), auto;
}
pre {
  overflow: auto;
}
@layer base {
  :root {
    --bg: #ffffff;
    --fg: #111827;
    --muted: #6b7280;
    --border: #e5e7eb;
    --surface: #ffffff;
    --code-bg: #f5f7fb;
    --code-border: #e5e7eb;
    --selection: #e0e7ff;
  }
  .dark {
    --bg: #0e1628;
    --surface: #121b30;
    --fg: #e6edf3;
    --muted: #9aa7b5;
    --border: #243045;
    --code-bg: #0b1324;
    --code-border: #1b2740;
    --selection: #1f3a5b;
  }
  body {
    background-color: var(--bg);
    color: var(--fg);
  }
  *, ::before, ::after {
    border-color: var(--border);
  }
  a {
    color: var(--link);
  }
  ::selection, ::-moz-selection {
    background: var(--selection);
    color: var(--fg);
  }
  pre, code, kbd, samp {
    font-weight: 400;
  }
  .dark pre {
    background: var(--code-bg);
    border: 1px solid var(--code-border);
    border-radius: 0.5rem;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.02);
  }
  .dark :not(pre) > code {
    background: var(--code-bg);
    @supports (color: color-mix(in lab, red, red)) {
      background: color-mix(in srgb, var(--code-bg) 92%, transparent);
    }
    border: 1px solid var(--code-border);
    border-radius: 0.35rem;
    padding: 0.1rem 0.3rem;
    color: inherit;
  }
  .dark .prose {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--link);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--border);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--border);
    --tw-prose-captions: var(--muted);
    --tw-prose-kbd: var(--fg);
    --tw-prose-kbd-shadows: 255 255 255;
    --tw-prose-code: var(--fg);
    --tw-prose-pre-code: #c9d1d9;
    --tw-prose-pre-bg: var(--code-bg);
    --tw-prose-th-borders: var(--border);
    --tw-prose-td-borders: var(--border);
  }
  .dark .text-black {
    color: var(--fg) !important;
  }
  .dark .border-black {
    border-color: var(--fg) !important;
  }
  .dark .bg-gray-300 {
    background-color: #1b2740 !important;
  }
}
@layer components {
  .theme-switch {
    --ts-w: 64px;
    --ts-h: 34px;
    --ts-pad: 5px;
    --ts-knob: 25px;
    --ts-shift: calc(var(--ts-w) - (var(--ts-pad) * 2) - var(--ts-knob));
    --ts-icon: 14px;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: var(--ts-w);
    height: var(--ts-h);
    padding: var(--ts-pad);
    border-radius: 9999px;
    border: 1px solid var(--border);
    background: var(--surface);
    margin-left: 12px;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
    transition: background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease;
  }
  .theme-switch:hover {
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);
  }
  .theme-switch:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.45);
  }
  .dark .theme-switch {
    background: #0f1a2e;
    border-color: #243045;
  }
  .theme-switch [data-sun], .theme-switch [data-moon] {
    position: absolute;
    width: var(--ts-icon);
    height: var(--ts-icon);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    line-height: 1;
    pointer-events: none;
    opacity: 0.6;
    color: #334155;
    filter: drop-shadow(0 1px 1px rgba(0, 0, 0, 0.25));
    transition: opacity 0.2s ease, color 0.2s ease;
  }
  .theme-switch [data-sun] {
    left: 8px;
  }
  .theme-switch [data-moon] {
    right: 8px;
  }
  .dark .theme-switch [data-sun], .dark .theme-switch [data-moon] {
    color: #cbd5e1;
  }
  .theme-switch [data-sun] svg, .theme-switch [data-moon] svg {
    width: 100%;
    height: 100%;
    display: block;
  }
  .theme-switch [data-knob] {
    position: absolute;
    top: var(--ts-pad);
    left: var(--ts-pad);
    width: var(--ts-knob);
    height: var(--ts-knob);
    border-radius: 9999px;
    background: var(--fg);
    transition: transform 0.22s cubic-bezier(0.4, 0, 0.2, 1), background-color 0.2s;
    will-change: transform;
  }
  .dark .theme-switch [data-knob] {
    background: #e6edf3;
  }
  .theme-switch[aria-pressed='true'] [data-knob] {
    transform: translateX(var(--ts-shift));
  }
  .theme-switch[aria-pressed='true'] [data-sun] {
    opacity: 0.3;
  }
  .theme-switch[aria-pressed='true'] [data-moon] {
    opacity: 0.95;
  }
  .theme-switch[aria-pressed='false'] [data-sun] {
    opacity: 0.95;
  }
  .theme-switch[aria-pressed='false'] [data-moon] {
    opacity: 0.3;
  }
  .theme-switch:active [data-knob] {
    transform: translateX(0) scale(0.96);
  }
  .theme-switch[aria-pressed='true']:active [data-knob] {
    transform: translateX(var(--ts-shift)) scale(0.96);
  }
  @media (prefers-reduced-motion: reduce) {
    .theme-switch, .theme-switch [data-knob], .theme-switch [data-sun], .theme-switch [data-moon] {
      transition: none !important;
    }
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  .dropdown {
    position: relative;
    display: inline-block;
  }
  .dropdown-button {
    background-color: var(--bg);
    font-size: 16px;
    border: 1px solid var(--border);
    cursor: pointer;
    border-radius: 4px;
    display: flex;
    flex-direction: row;
    align-items: center;
    padding: 4px 8px;
    gap: 8px;
    position: relative;
    transition: all 0.3s ease;
    color: var(--fg);
    overflow: hidden;
  }
  .dropdown-button::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 150%;
    height: 150%;
    background: radial-gradient(circle, var(--surface) 30%, transparent 70%);
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: -1;
  }
  .dropdown-button:hover {
    border-color: #8b4513;
    color: #8b4513;
    box-shadow: 0 2px 8px rgba(var(--surface), 0.15);
  }
  .dropdown-button:hover::before {
    transform: translate(-50%, -50%) scale(1);
  }
  .dropdown-content {
    position: absolute;
    background-color: var(--surface);
    border: 1px solid var(--border);
    box-shadow: 0px 8px 16px 0px rgba(var(--surface), 0.2);
    z-index: 1;
    border-radius: 4px;
    margin-top: 4px;
    padding: 0px;
    width: fit-content;
    min-width: 150px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .show {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateX(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  .dropdown-item {
    width: 100%;
    text-align: left;
    background-color: var(--surface);
    color: var(--fg);
    border: none;
    cursor: pointer;
    border-radius: 4px;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 8px;
    padding: 8px 18px;
    opacity: 0;
    transition: all 0.3s ease;
  }
  .show .dropdown-item {
    animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    animation-delay: calc(var(--order, 0) * 0.05s);
  }
  .dropdown-item:hover {
    background-color: var(--border);
    border-radius: 4px;
    transform: translateX(8px) !important;
    width: calc(100% - 8px);
    box-shadow: -4px 0 8px -4px rgba(var(--surface), 0.1);
    color: var(--fg);
    font-weight: 500;
  }
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
